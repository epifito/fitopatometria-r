{
  "hash": "1534090dc46082a28c3c69258335554d",
  "result": {
    "markdown": "# GLM binomial\n\n\n\n\n\n\n\n\n\n## Demos\n\n-   Dist. Normal\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nx <- rnorm(n=100,    # sample size\n          mean=10,  # mean of sample\n          sd=3      # standard deviation of sample\n         )\nhead(x)\nmean(x)\nsd(x)\n\n# predictor linear\nmu = 3 + 2*x      \nplot(x, mu)\n\n# generamos el componente aleatorio con distribucion normal de los errores\n# set.seed(1)\ny  <- mu + rnorm(100, 0, 3)\n\nplot(x,y)\n```\n:::\n\n\n\n-   LM - repaso\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(y~x)\nplot_model(mod1, type='pred', show.data=T, ci.lvl = NA)\nsummary(mod1)\n```\n:::\n\n\n\nDe este modelo entendemos que cuando x=0, y=2.89 y por cada aumento unitario de x, y aumenta 1.99 unidades\n\ny = 2.89 + 1.99 \\* x\n\nAhora veamos el mismo ajuste usando \"glm\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1.1 <- glm(y~x, family = gaussian)\nplot_model(mod1.1, type='pred', show.data=T, ci.lvl = NA)\nsummary(mod1.1)\n```\n:::\n\n\n\ny = 2.89 + 1.99 \\* x\n\nExactamente los mismos coeficientes que mod1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngaussian()\nbinomial()\npoisson()\n```\n:::\n\n\n\n-   Dist. Binomial\n\nEntendamos la naturaleza binaria de la incidencia.\n\nImaginemos que estamos entrando en un campo de soja y queremos estimar la incidencia de una enfermedad foliar X\n\nUna estacion (unidad) de muestreo de tamaño 30\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\n\nbin_1 <- rbinom(\n  1,        # numero de observaciones o simulaciones (estaciones de muestreo)\n  size=30,  # numero de ensayos (n) \n  p=0.1     # probabilidad de exito (p)\n)\nbin_1\nbin_1/30    # 1 valor de incidencia de estacion de muestreo\n\n# 0.066 -> 6,6% incidencia media del lote\n\n# gghist(bin_1, e=30*0.1, m = mean(bin_1))\n```\n:::\n\n\n\n10 estaciones de muestreo de tamaño 30\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\n\nbin_2 <- rbinom(\n  10,       # numero de observaciones\n  size=30,  # numero de ensayos (n) \n  p=0.1     # probabilidad de exito (p)\n)\nbin_2       # muestra compuesta de 10 estaciones de muestreo con n=30 \nbin_2/30    # 10 valores de incidencia de n=30\n\n# gghist(bin_2, e=30*0.1, m=mean(bin_2)) \n\nmean(bin_2/30) \n# 0.11 -> 11% incidencia media del lote\n```\n:::\n\n\n\n100 estaciones de muestreo de tamaño 30\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nbin_3 <- rbinom(\n  100,    # numero de observaciones\n  size=30,  # numero de ensayos \n  p=0.1     # probabilidad de exito\n)\nbin_3\n\n# gghist(bin_3, e=30*0.1, m=mean(bin_3)) \nbin_3/30 # 100 valores de incidencia de n=30\nmean(bin_3/30) \n# 0.101 -> 10.1% incidencia media del lote\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# media = np \nmedia = 30*0.1\nmedia\n\n# varianza  = np(1−p) \nvarianza =  30*0.1*(1-0.1)\nvarianza\n\n# sd = sqrt(np(1−p)) \nsd =  sqrt(30*0.1*(1-0.1))\nsd\n# sd_field =  1.643168\n```\n:::\n\n\n\nVariable aleatoria $X$ que es distribuida $X∼binomial(n,p)$ con media $μ = np$ y varianza $σ2=np(1−p)$, siendo $X$ el conteo de eventos exitosos en $n$ ensayos Bernoulli idénticos e independientes con probabilidad de éxito $p$ constante.\n\n## DBCA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphom_raw <- import(\"https://raw.githubusercontent.com/juanchiem/glm_webinar/main/data/phomopsis.csv\") %>% tibble\n# phom_raw <- rio::import(\"data/phomopsis.csv\") %>% tibble \n```\n:::\n\n\n\n**Efecto de tratamientos de fungicidas sobre tizon foliar por Phomopsis en frutilla [@madden2002evaluation]**\n\n-   Patógeno: *Phomopsis obscurans*\n\n-   Diseño en bloques completos aleatorizados (RCBD)\n\n-   Cuatro bloques (bk, j = 1, ..., 4)\n\n-   Ocho tratamientos: control no tratado + 7 fungicidas (trt, i = 1, ..., 8) aleatorizados dentro de cada bloque\n\n-   Variable respuesta (Y): Numero de foliolos enfermos\n\n-   n Tamaño de la muestra\n\n-   Incidencia por parcela = y/n\n\n\n* Acondicionamiento\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphom_raw  \n\n# Factorizamos nuestros variebles independientes (predictoras) y calculamos la incidencia en proporcion \n\nphom_dat <- phom_raw %>% \n  mutate_at(vars(trt, bk), as.factor) %>% \n  mutate(inc=y/n) %>% \n  arrange(trt)\nphom_dat\n```\n:::\n\n\n\n-   Visualización\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphom_dat %>% \n  ggplot() + \n  aes(x=trt, y = inc) + \n  geom_boxplot(alpha=.5, width = .2) + \n  geom_point(alpha=.7) + \n  labs(x=\"Tratamientos\", y=\"Incidencia (proporción)\")\n```\n:::\n\n\n\n-   Modelos mixtos\n\nEfecto fijo al tratamiento y aleatorio a los bloques\n\n-   LM\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pacman::p_load(lmerTest)\nmod_phom_LM <- lmer(inc ~ trt + (1|bk), \n                    data=phom_dat)\nperformance::check_homogeneity(mod_phom_LM)\nperformance::check_normality(mod_phom_LM)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::Anova(mod_phom_LM, type=\"III\")\nsummary(mod_phom_LM)\n```\n:::\n\n\n\nPodriamos avanzar con el modelo, hacia la estimacion de medias predichas por el mismo\n\n{emmeans, multcomp}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_phom_LM <- emmeans(mod_phom_LM, ~ trt, type=\"response\")\nem_phom_LM\n# comparaciones multiples \nres_phom_LM <- cld(em_phom_LM, Letters = letters, alpha = .05, type = \"response\")\n\nknitr::kable(res_phom_LM)\n\nplot_model(mod_phom_LM, type='pred', show.data=T)\n```\n:::\n\n\n\nInterpretacion de coeficientes:\n\nAhora que tenemos los predichos de cada tratamiento podemos interpretar los coeficientes.\n\nRecordemos que trt 1 es el nivel de referencia (orden arbitrario alfabético, se puede cambiar), y el resto de trat se suman a este para la estimacion de su media:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(res_phom_LM)\nsummary(mod_phom_LM)\nc_t1 = 0.4366667\nc_t2 = 0.4366667 +(-0.15667)\nc_t2\nc_t3 = 0.4366667 +(-0.29000)\nc_t3\n```\n:::\n\n\n\n-   GLM\n\n(Anecdotico)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_phom_LM2 <- glmer(inc ~ trt + (1|bk),\n                      family = gaussian(\"identity\"),\n                      data=phom_dat)\nsummary(mod_phom_LM2)\nsummary(mod_phom_LM)\n```\n:::\n\n\n\nOpción 1: variable original (éxitos y fracasos) agrupados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_phom_GLM1 <- glmer(\n  cbind(y, n-y) ~ trt + (1|bk), # matriz de exitos y fracasos\n  family=\"binomial\",\n  data=phom_dat)\nsummary(mod_phom_GLM1)\n```\n:::\n\n\n\nOpción 2: proporcion de exitos / total muestra (incidencia)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_phom_GLM2 <- glmer(inc ~ trt + (1|bk), \n               family=\"binomial\", \n               weights = n, # pesos o tamaño de muestra\n               data=phom_dat)\nsummary(mod_phom_GLM2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_model(mod_phom_GLM1, mod_phom_GLM2)\n```\n:::\n\n\n\n-   Diagnósticos\n\nhttps://stats.stackexchange.com/questions/185491/diagnostics-for-generalized-linear-mixed-models-specifically-residuals\n\n{DHARMa}\n\nhttps://cran.r-project.org/web/packages/DHARMa/vignettes/DHARMa.html#goodness-of-fit-tests-on-the-scaled-residuals\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntestOutliers(mod_phom_GLM2)\ntestDispersion(mod_phom_GLM2)\n```\n:::\n\n\n\nMedias predichas por el modelo ajustado y comparaciones multiples\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem_phom_GLM <- emmeans(mod_phom_GLM2, ~ trt, type=\"response\")\nres_phom_GLM <- cld(em_phom_GLM, Letters = letters, alpha = .05, type = \"response\")\nknitr::kable(res_phom_GLM)\n```\n:::\n\n\n\n-   Interpretacion de coeficientes\n\ntrt 1 es el nivel de referencia, y el resto de trat se suman a este para la estimacion de su media:\n\nPero ahora en escala de log ODDS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mod_phom_GLM2)\nknitr::kable(res_phom_GLM)\n\nLO_t1 = -0.2585\np_t1 = 0.4357251\n\nodds_t1 = 0.4357251 / (1-0.4357251)\nodds_t1 \n\nlog(odds_t1)\nLO_t1\n# volver a slide 15\n```\n:::\n\n\n\nResto de tratamientos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_t2 = 0.2763751\nodds_t2 = 0.2763751 / (1-0.2763751)\n\nOR_t2_t1 = odds_t2/odds_t1\n\nOR_t2_t1 #  0.4946108\n\nlog(OR_t2_t1) # chequear con summary\nsummary(mod_phom_GLM2)\nlog(OR_t2_t1) # chequear con summary\n\n# similar al LM?\nlog(odds_t2) - log(odds_t1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# t2 directamente del summary\nexp(-0.7040)\nOR_t2_t1\ntab_model(mod_phom_GLM2)\n(1-0.4946029) * 100\n# 50.53971\n```\n:::\n\n\n\n> La chance de un foliolo de frutilla presentar sintoma de phomopsis disminuye un 50% cuando se aplica el tratamiento 2 respecto al control sin tratar\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::kable(res_phom_LM)\nknitr::kable(res_phom_GLM)\n```\n:::\n\n\n\n• Los errores estándar estimados (SE) son todos incorrectos (por definición), deben ser funciones de la media para datos binomiales\n\n• Los SE incorrectos darán pruebas incorrectas de significación para los efectos del tratamiento y conducirán a conclusiones incorrectas\n\n## Reg. Logistica\n\n-   Data maracuya:\n\n-   geno: genotipos de maracuyá (Passiflora edulis) (A y B)\n\n-   bk: bloque (area homogenea dentro del campo que incluye hileras de genotipo A y B) - Efecto aleatorio\n\n-   days: dias desde la inoculacion (DDI) con el virus CABMV (Cowpea aphid-borne mosaic virus)\n\n-   n_plants: nro de plantas evaluadas dentro de cada parcela\n\n-   dis_plants: plantas con sintomas del CABMV\n\n-   y = inc_prop (dis_plants/n_plants)\n\n-   plot: unidad experimental (parcelas=bloque:geno)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw <- rio::import(\"https://raw.githubusercontent.com/juanchiem/glm_webinar/main/data/maracuya.csv\") %>% tibble\n# raw <- rio::import(\"data/maracuya.csv\") %>% tibble\n\ndat <- raw %>%  \n  mutate_at(vars(geno, bk), as.factor) %>% \n  mutate(inc_prop=dis_plants/n_plants, \n         plot = interaction(bk,geno))  # %>% \n\ndat %>%\n    ggplot() +\n    aes(x=days, y=inc_prop, col=geno, shape=bk)+\n    geom_point()+\n    geom_line(aes(group=interaction(bk,geno))) \n```\n:::\n\n\n\nFiltramos el dataset completo para subsets menores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# solo una evaluación a los 60 dias \ndat60 <- dat %>% \n  filter(days %in% c(60))\n\n# solo una evaluación a los 90 dias \ndat90 <- dat %>% \n  filter(days %in% c(90))\n\n# Dos evaluaciones: a los 60 y 90 dias \ndat60_90 <- dat %>% \n  filter(days %in% c(60, 90)) # %>% \n  # mutate_at(vars(days), as.factor) \n```\n:::\n\n\n\n### Single-point assessment\n\n-   60 d\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat60\ndat60 %>% \n  ggplot() + \n  aes(x=geno, y=inc_prop) + \n  geom_jitter(alpha=.5, width=.02)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mod1 <- glmer(\n#   cbind(dis_plants, n_plants-dis_plants) ~ geno + (1|bk), \n#   family=\"binomial\", \n#   data=dat60) \n\nmod1 <- glmer(\n  inc_prop ~ geno + (1|bk), # bloque como efecto aleatorio\n  weights=n_plants,         \n  family=\"binomial\", \n  data=dat60) \n\ncar::Anova(mod1)\nsummary(mod1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_model(mod1)\nplot_model(mod1, type='pred', show.data=T,   bpe.color =\"red\")\n```\n:::\n\n\n\nOtro gran aliado es el paquete \"emmeans\" quien nos devuelve las estimaciones en proporcion ahorrandonos muchos calculos manuales\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nem1 <- emmeans(mod1, ~ geno, type=\"response\")\nres1 <- cld(em1, Letters = letters, alpha = .05, type = \"response\")\nknitr::kable(res1)\n```\n:::\n\n\n\nInterpretacion de coef y medidas de efecto\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# lo que nos da el emmeans\np_A = 0.1066667\np_B =  0.0933333\n\nodds_A = p_A/(1-p_A)\nodds_B = p_B/(1-p_B)\n\n# lo que nos da el tab_model\nOR_B_A = odds_B/odds_A\nOR_B_A\n\n# lo que nos da el summary \nlog_OR_B_A = log(OR_B_A)\nlog_OR_B_A  \nsummary(mod1)\n```\n:::\n\n\n\n-   90 d\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat90\n\ndat90 %>% \n  ggplot() + \n  aes(x=geno, y=inc_prop) + \n  geom_point()\n\n# mod1 <- glmer(\n#   cbind(dis_plants, n_plants-dis_plants) ~ geno + (1|bk), \n#   family=\"binomial\", \n#   data=dat60)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod2 <- glmer(\n  inc_prop ~ geno + (1|bk),\n  weights=n_plants,\n  family=\"binomial\", \n  data=dat90)\n\n# boundary (singular) fit: see help('isSingular') puede deberse al bajo numero de bk\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::Anova(mod2)\nsummary(mod2)\n```\n:::\n\n\n\nVemos que ahora si, el geno tiene efecto significativo sobre la incidencia de la enfermedad\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_model(mod2)\n```\n:::\n\n\n\npodemos decir que la chance de presentar la enfermedad del genotipo B es 71% (1 - 0.29 = 0.71 \\* 100) menor en relacion al geno A\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_model(mod2, type='pred', show.data=T)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nem2 <- emmeans(mod2, ~ geno, type=\"response\")\nres2 <- cld(em2, Letters = letters, alpha = .05, type = \"response\")\nknitr::kable(res2)\n```\n:::\n\n\n\n### Multiple-point assessment\n\nIncluyendo una interaccion\n\n-   60 y 90 d\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat60_90\n\ndat60_90 %>% \n  ggplot() +\n  aes(x=days, y=inc_prop, col=geno, shape=bk)+\n  geom_point()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# debido a las mediciones repetidas en el tiempo agregamos efecto aleatorio sobre la parcela\n\nmod3 <- glmer(inc_prop ~ geno * days + \n                (1|bk) + (1|bk:geno), \n              weights=n_plants,\n              family=\"binomial\",\n              data=dat60_90) \n\ncar::Anova(mod3)\n```\n:::\n\n\n\n(anecdotico: days como factor con 2 niveles)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::Anova(glmer(inc_prop ~ geno * factor(days) + \n                (1|bk) + (1|bk:geno), \n              weights=n_plants,\n              family=\"binomial\",\n              data=dat60_90))\n```\n:::\n\n\n\nRemoviendo la interaccion, dejando como efectos simples geno y dias\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod3.1 <- glmer(inc_prop ~ geno + days + \n                  (1|bk) + (1|bk:geno),\n              weights=n_plants,\n              family=\"binomial\",\n              data=dat60_90)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(mod3, mod3.1, test = \"Chisq\")\nAIC(mod3, mod3.1)\n```\n:::\n\n\n\nEl modelo conteniendo la interaccion (geno \\* days) es mejor (p=0.0231, AIC=58.34804)\n\n(anecdótico: asignacion de parcela explicitamente)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod3_ <- glmer(inc_prop ~ geno * days + \n                (1|bk) + (1|plot), \n              weights=n_plants,\n              family=\"binomial\",\n              data=dat60_90) \nAIC(mod3, mod3_)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mod3)\n```\n:::\n\n\n\nlog odds A = -5.33987 + 0.05358 days log odds B = (-5.33987 + 2.04105) + (0.0535-0.036) days\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab_model(mod3)\n```\n:::\n\n\n\ndays = 1.06 \\>\\> por cada dia acumulado desde la inoculacion el geno A tiene una chance de aumentar 1.06 veces la probabilidad de aparicion de sintomas (aumento de la incidencia) y es significativo (IC: 1.03--1.08, p= \\<0.001)\n\ngeno \\[B\\] \\* days = 0.96 \\>\\>\\> la chance de aumentar la incidencia por cada dia desde la inoculacion en el geno B es 4% menor respecto al geno A (IC: 0.93 -- 0.99, p=0.023)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_model(mod3, \n           terms = c(\"days\", \"geno\"), \n           type='pred', show.data=T)\n\nem3 <- emmeans(mod3, ~ geno|days, type=\"response\")\n\nres3 <- cld(em3, Letters = letters, alpha = .05, type = \"response\")\nknitr::kable(res3)\n```\n:::\n\n\n\nconfirmamos lo visto anteriormente: - a los 60 dias no hubo diferencias en la incidencia del virus, pero si a los 90 ddi\n\n### Serie full\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dat)\ndat %>% \n  ggplot() +\n  aes(x=days, y=inc_prop, col=geno, shape=bk)+\n  geom_point()\n\n# debido a las mediciones repetidas en el tiempo agregamos efecto aleatorio sobre la parcela\n\nmod_serie <- glmer(inc_prop ~ geno * days + \n                     (1|bk) + (1|bk:geno),  \n                   weights=n_plants,\n                   family=\"binomial\",\n                   data=dat) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sacamos el efecto del genotipo\nmod_serie0 <- glmer(inc_prop ~ days +  \n    (1|bk) + (1|bk:geno),\n              weights=n_plants,\n              family=\"binomial\",\n              data=dat) \n\nmod_serie1 <- glmer(inc_prop ~ days + geno +   \n    (1|bk) + (1|bk:geno),\n              weights=n_plants,\n              family=\"binomial\",\n              data=dat) \n```\n:::\n\n\n\n-   Seleccion de modelo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(mod_serie0, mod_serie1, mod_serie, test = \"Chisq\")\nAIC(mod_serie0, mod_serie1, mod_serie)\n```\n:::\n\n\n\nmod_serie: df=6 y AIC=299.4276\n\nDiagnósticos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntestOutliers(mod_serie)\ntestDispersion(mod_serie)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mod_serie)\n\ntab_model(mod_serie)\nplot_model(mod_serie, \n           terms = c(\"days\", \"geno\"), \n           type='pred', show.data=T)\n```\n:::\n\n\n\nPred. lineal geno A = -3.18 + 0.024 \\* days (dias significativo para el geno A, ya que conforme transcurren los dias la incidencia aumenta)\n\nPred. lineal geno B = (-3.275 + 0.147) + (0.025 + 0.99) \\* days\n\nInteraccion significativa: las curvas son diferentes, deben ajustarse una por genotipo\n\n-   Predicción\n\n{ggeffects}\n\nCurva completa\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpredict(mod_serie, c( \"days\", \"geno\"))\n```\n:::\n\n\n\nGenotipo A - intervalo 100 a 110 ddi\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpredict(mod_serie, \n          terms = \"days [100:110]\", \n          condition = c(geno = c(\"A\")))\n```\n:::\n\n\n\nAmbos genotipos para el DDI=100\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpredict(mod_serie, \n          terms = \"geno\", \n          condition = c(days = \"100\"))\n```\n:::\n",
    "supporting": [
      "3-glm_binomial_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}